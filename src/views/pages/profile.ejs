<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Profile and Kanbans</title>
  <!-- Import Bootstrap 5 CDN -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body,
    html {
      font-family: sans-serif;
      overflow: auto;
      /* or remove overflow property if set to hidden */
    }

    .header {
      height: 5rem;
      background-color: #280659;
      display: flex;
      align-items: center;
      padding-left: 40px;
      padding-right: 40px;
      font-size: 24px;
    }

    .header-nav {
      display: flex;
      flex-direction: row;
      height: 100%;
      width: 100%;
      flex-wrap: nowrap;
      justify-content: space-between;
      align-items: center;
    }

    .header-nav a {
      display: flex;
      align-items: center;
      padding: 5px 15px;
      text-decoration: none;
      color: #FFF;
      gap: 8px;
      cursor: pointer;
      transition: background-color 0.3s ease;
      font-weight: 400;
    }

    .header-nav a:hover {
      background-color: #F54952;
      color: #FFF;
      border-radius: 8px;
    }

    .header-nav p {
      margin: 0;
    }

    .section-title,
    .team-title,
    .titleKanban h1 {
      color: #660F56;
      font-size: 32px;
      font-weight: 500;
      margin-bottom: 20px;
    }

    .user-card,
    .team-section,
    .lista-kanban {
      background-color: #AE2D68;
      border-radius: 40px;
      padding: 20px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .user-card .card,
    .team-card .card {
      margin-top: 20px;
      text-align: center;
    }

    .user-card .profilei,
    .team-card img {
      border-radius: 50%;
      border: 5px solid #341671;
      object-fit: cover;
    }

    .user-card .profilei {
      width: 200px;
      height: 200px;
    }

    .user-card .image {
      display: flex;
      justify-content: center;
      margin-top: -30px;
    }

    .user-card .image button {
      height: 40px;
      width: 40px;
      margin-left: -20px;
      border-color: transparent;
      border-radius: 20%;
      background-color: #341671;
      z-index: 3;
      transition: scale 0.4s ease;
    }

    .user-card .image button:hover {
      scale: 1.05;
    }

    .team-card {
      background-color: #fff;
      border-radius: 20px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      cursor: pointer;
      transition: transform 0.3s ease;
      text-align: center;
      padding: 20px;
    }

    .team-card:hover {
      transform: scale(1.05);
    }

    .team-card img {
      width: 100px;
      height: 100px;
      margin-top: -50px;
      margin-bottom: 10px;
    }

    .team-card p {
      margin: 0;
      font-size: 18px;
      font-weight: 300;
      color: #000000;
    }

    .team-card .role {
      font-size: 18px;
      color: #660F56;
      font-weight: 500;
    }

    .lista-kanban {
      max-height: 100vh;
      overflow-y: auto;
      margin-top: 20px;
      display: flex;
      justify-content: space-around;
      align-content: flex-start;
      flex-wrap: wrap;
      align-items: flex-start;
    }

    .card-kanban {
      width: 260px;
      height: 290px;
      border-radius: 30px;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      transition: transform 0.3s ease;
      text-align: center;
      position: relative;
      cursor: pointer;
      margin-bottom: 20px;
      background-color: #fff;
    }

    .card-kanban h2 {
      font-size: 20px;
      margin: 0;
      color: #000;
      padding-top: 160px;
    }

    .card-kanban .card-icon {
      background-color: #3E206D;
      border-radius: 50%;
      width: 90px;
      height: 90px;
      display: flex;
      align-items: center;
      justify-content: center;
      position: absolute;
      top: 70px;
      left: calc(50% - 45px);
    }

    .card-kanban .card-icon img {
      width: 50px;
      height: 50px;
      object-fit: contain;
    }

    .card-kanban .top-section {
      background-color: #F94144;
      border-top-left-radius: 30px;
      border-top-right-radius: 30px;
      height: 50%;
      position: relative;
    }

    .card-kanban:hover {
      transform: scale(1.05);
    }

    /* Estilo do Chat */
    .chat-container {
      position: fixed;
      bottom: 20px;
      right: 20px;
    }

    .chat-button {
      background-color: #F54952;
      width: 60px;
      height: 60px;
      border-radius: 50%;
      border: none;
      color: white;
      font-size: 28px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
    }

    .chat {
      background-color: #F54952;
      width: 500px;
      height: 680px;
      border-radius: 15px;
      display: flex;
      flex-direction: column;
      padding: 20px;
      box-sizing: border-box;
      overflow-y: auto;
      position: fixed;
      bottom: 100px;
      right: 20px;
      box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
      display: none;
    }

    .chat p {
      font-size: 28px;
      font-weight: 400;
      color: white;
      align-self: center;
      margin: 0;
      padding-top: 15px;
    }

    .messages {
      display: flex;
      flex-direction: column;
      margin-top: 15px;
      margin-bottom: 80px;
    }

    /* Bal√µes de mensagem */
    .messages .message {
      background-color: #fff;
      border-radius: 15px;
      padding: 10px 15px;
      margin: 10px 0;
      position: relative;
      min-width: 70%;
      max-width: 80%;
      box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
    }

    .messages .message::before {
      content: '';
      position: absolute;
      border-width: 10px;
      border-style: solid;
      display: block;
    }

    .messages .left {
      align-self: flex-start;
      margin-left: 10px;
    }

    .messages .left::before {
      border-color: transparent #fff transparent transparent;
      left: -16.5px;
      top: 15px;
    }

    .messages .right {
      align-self: flex-end;
      margin-right: 10px;
    }

    .messages .right::before {
      border-color: transparent transparent transparent #fff;
      right: -16.5px;
      top: 15px;
    }

    .line {
      margin-top: 10px;
      background-color: #280659;
      height: 10px;
    }

    /* Estilo para o campo de mensagem */
    .my-message {
      display: flex;
      align-items: center;
      padding: 10px 15px;
      background-color: #FFFFFF;
      border: 2px solid #280659;
      border-radius: 13px;
      box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
      width: 100%;
      box-sizing: border-box;
      position: absolute;
      justify-content: space-between;
      bottom: 0;
      left: 0;
    }

    .my-message input {
      border: none;
    }

    .my-message p {
      margin: 0;
      padding-right: 15px;
      font-size: 34px;
      color: #A9A9A9;
      flex-grow: 1;
    }

    .my-message input {
      width: 100%;
      height: 100%;
      outline: none;
    }

    .my-message .icon-send {
      width: 24px;
      height: 24px;
      cursor: pointer;
      transition: transform 0.2s ease-in-out;
    }

    .my-message .icon-send:hover {
      transform: scale(1.1);
    }

    .my-message .icon-send:active {
      transform: scale(0.9);
    }
  </style>
</head>

<body>
  <header class="header">
    <nav class="header-nav">
      <a href="/home">
        <img src="images/icon-home.svg" alt="Home Icon">
      </a>
      <a href="/kanban">
        <img src="images/icon-kanban.svg" alt="Kanban Icon">
        <p>Company Kanban's</p>
      </a>
      <a href="/myprofile">
        <img src="images/icon-mysection.svg" alt="My Section Icon">
        <p>My section</p>
      </a>
      <a href="/faq">
        <img src="images/icon-faq.svg" alt="FAQ Icon">
        <p>FAQ</p>
      </a>
      <% if(user.usertype==="admin" ){ %>
        <a href="/admin">
          <img src="/adm.svg" alt="ADM Icon">
          <p>Admin</p>
        </a>
        <% } %>
    </nav>
  </header>

  <main class="container my-5">
    <div class="row justify-content-between">
      <div class="col-md-6">
        <div class="row">
          <div class="col-12">
            <h3 class="section-title">My section</h3>
            <div class="user-card text-center">
              <div class="image text-center">
                <img class="profilei" src="<%= user.photo || '/images/default-profile.png' %>">
                <form id="updatePhotoForm" action="/user/update-photo" method="POST" enctype="multipart/form-data"
                  style="display: inline;">
                  <input type="file" id="photoInput" name="photo" accept="image/jpeg, image/png, image/gif"
                    style="display: none;">
                  <button type="button" class="upload" id="uploadButton">
                    <img src="images/icon-upload.svg" alt="Upload" />
                  </button>
                </form>
              </div>
              <div class="card">
                <h2>
                  <%= user.firstName %>
                    <%= user.lastName %>
                </h2>
                <h2>
                  <%= user.email %>
                </h2>
                <h2 class="role">
                  <%= user.role %>
                </h2>
              </div>
            </div>
          </div>
          <div class="col-12 mt-4">
            <h3 class="team-title">My team</h3>
            <div class="team-section">
              <div class="row gy-4">
                <% coworkers.forEach(function(coworker){ %>
                  <% if(coworker.id===user.id){ return; } %>
                    <div class="col-6">
                      <div class="team-card">
                        <img src="<%= coworker.photo || '/images/default-profile.png' %>"
                          alt="<%= coworker.firstName %> <%= coworker.lastName %>">
                        <p>
                          <%= coworker.firstName %>
                            <%= coworker.lastName %>
                        </p>
                        <p class="role">
                          <%= coworker.role %>
                        </p>
                      </div>
                    </div>
                    <% }) %>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="col-md-6">
        <div class="titleKanban">
          <h1>Your Boards</h1>
        </div>
        <section class="lista-kanban">
          <% boards.forEach(function(board) { %>
            <div class="card-kanban" onclick="window.location.href='/board/<%= board.id %>'">
              <div class="top-section"></div>
              <div class="card-icon">
                <img src="/images/group.svg" alt="Group Icon">
              </div>
              <h2>
                <%= board.name %>
              </h2>
            </div>
            <% }); %>
        </section>
      </div>
    </div>
  </main>

  <div class="chat-container">
    <button id="chat-toggle-btn" class="chat-button">üí¨</button>
    <div id="chat-box" class="chat" style="display: block;">
      <p>CHAT</p>
      <div class="line"></div>
      <div class="messages" id="chat-messages"></div>
      <div class="my-message">
        <input type="text" id="chat-input" placeholder="Type your message here...">
        <img class="icon-send" src="images/icon-send.svg" id="send-message-btn" alt="Send">
      </div>
    </div>
  </div>

  <!-- SuperViz SDK -->
  <script type="module">
    import SuperVizRoom from "https://unpkg.com/@superviz/sdk@latest";
    import { Realtime, RealtimeComponentEvent, RealtimeComponentState } from "https://unpkg.com/@superviz/sdk@latest";

    let room;
    let channel;

    async function initializeRoom(roomId, companyId, roomName, userId, userName) {
      console.log("Room id: ", roomId);
      console.log("Company id: ", companyId);
      console.log("Room name: ", roomName);
      console.log("User id: ", userId);
      console.log("User name: ", userName);
      try {
        room = await SuperVizRoom('3fnmikwkbpy2hwt2c0ppqxd3zucpgz', {
          roomId: roomId,
          group: {
            id: companyId,
            name: roomName,
          },
          participant: {
            id: userId,
            name: userName,
          },
        });

        const realtime = new Realtime();
        room.addComponent(realtime);
        realtime.subscribe(RealtimeComponentEvent.REALTIME_STATE_CHANGED, (state) => {
          if (state === RealtimeComponentState.STARTED) {
            channel = realtime.connect('chat');
            channel.subscribe('message', displayMessage);
          }
        });

        console.log("Room initialized successfully.");
      } catch (error) {
        console.error('Error initializing room:', error);
        alert('Failed to initialize the room.');
      }
    }

    function displayMessage(message) {
      const chatMessages = document.getElementById('chat-messages');
      const messageElement = document.createElement('div');
      messageElement.className = message.data.sender === "<%= user.firstName%> <%= user.lastName%>" ? "message right" : "message left";
      messageElement.innerHTML = `<div>${message.data.sender}</div><div>${message.data.text}</div>`;
      chatMessages.appendChild(messageElement);
      chatMessages.scrollTop = chatMessages.scrollHeight; // Auto-scroll to the bottom
    }

    document.getElementById('send-message-btn').addEventListener('click', () => {
      const chatInput = document.getElementById('chat-input');
      const message = chatInput.value;
      if (channel && message) {
        channel.publish('message', { sender: "<%= user.firstName%> <%= user.lastName%>", text: message });
        chatInput.value = '';
      }
    });

    document.getElementById('chat-toggle-btn').addEventListener('click', () => {
      const chatBox = document.getElementById('chat-box');
      chatBox.style.display = chatBox.style.display === 'none' || chatBox.style.display === '' ? 'block' : 'none';
    });

    // Initialize the room on page load
    window.addEventListener('load', () => {
      initializeRoom('<%= company.roomId%>', '<%= company.id %>', '<%= company.name %>', '<%= userId %>', '<%= user.firstName %>');
    });
  </script>


</body>

<script>
  document.getElementById('uploadButton').addEventListener('click', function () {
    document.getElementById('photoInput').click();
  });

  document.getElementById('photoInput').addEventListener('change', function () {
    document.getElementById('updatePhotoForm').submit();
  });
</script>

</html>
