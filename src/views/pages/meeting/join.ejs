<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Join Meeting</title>
  <script type="module" src="https://unpkg.com/@superviz/sdk@latest"></script>
</head>

<body>

  <!-- Include Superviz SDK from a CDN -->
  <script type="module">
    import SuperVizRoom, { VideoConference, Realtime, RealtimeComponentEvent, RealtimeComponentState, WhoIsOnline } from "https://unpkg.com/@superviz/sdk@latest";

    function cardMoved(params) {
      console.log('moved', params)

      fetch('/webhook/card-moved', {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(params)
      })
        .then(response => response.json())
        .then(data => console.log('resposta', data))
        .catch(error => console.error('Erro ao enviar o webhook:', error));
    }

    async function joinMeeting(roomId, companyId, roomName, userId, userName) {
      try {
        const room = await SuperVizRoom('3fnmikwkbpy2hwt2c0ppqxd3zucpgz', {
          roomId: roomId,
          group: {
            id: companyId,
            name: roomName,
          },
          participant: {
            id: userId,
            name: userName,
          },
        });
        const video = new VideoConference({
          participantType: 'host',
          styles: ``,
          position: "bottom"
        })
        room.addComponent(video)
        const whoIsOnline = new WhoIsOnline({
          position: "bottom-left"
        });
        room.addComponent(whoIsOnline)

        const realtime = new Realtime();
        room.addComponent(realtime);
        realtime.subscribe(RealtimeComponentEvent.REALTIME_STATE_CHANGED, (state) => {
          if (state === RealtimeComponentState.STARTED) {
            const channel = realtime.connect('kanban');

            channel.subscribe('card.moved', cardMoved)
            channel.publish('card.moved', {
              status: 'updated'
            })
          }
        });
      } catch (error) {
        console.error('Error initializing Superviz room:', error);
        document.getElementById('status').innerText = 'Error joining the meeting.';
      }
    }

    // Call the function with the data passed from the server
    joinMeeting('<%= roomId %>', '<%= companyId %>', '<%= roomName %>', '<%= userId %>', '<%= userName %>');
  </script>
</body>

</html>
